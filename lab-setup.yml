---
- hosts: all
  become: yes

  tasks:
    - name: Update the system
      apt: update_cache=yes upgrade=dist

    - name: Install apt-transport-https
      apt:
        name: apt-transport-https
        state: latest
        update_cache: true

    - name: Add a GPG key for the packages
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add kubernetes apt repo
      apt_repository:
        repo: 'deb http://apt.kubernetes.io/ kubernetes-xenial main'
        filename: kubernetes
        state: present

    - name: Install docker
      apt:
        name: docker.io
        state: present

    - name: Install kubelet (version 1.9.1-00)
      apt:
        name: kubelet=1.9.1-00
        state: present

    - name: Install kubeadm (version 1.9.1-00)
      apt:
        name: kubeadm=1.9.1-00
        state: present

    #- name: Edit /etc/systemd/system/kubelet.service.d/kube10-kubeadm.conf (master)
    #  lineinfile:
    #    path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    #    state: present
    #    insertafter: '^Environment='
    #    line: 'Environment="KUBELET_EXTRA_ARGS=--node-ip=10.0.0.10"'
    #  when: "'master' in inventory_hostname"

    #- name: Edit /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (worker)
    #  lineinfile:
    #    path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    #    state: present
    #    insertafter: '^Environment='
    #    line: 'Environment="KUBELET_EXTRA_ARGS=--node-ip=10.0.0.11"'
    #  when: "'node' in inventory_hostname"

    #- name: Load (modprobe) additional kernel modules
    #  command: modprobe {{ item }}
    #  with_items:
    #  - ip_vs
    #  - ip_vs_rr
    #  - ip_vs_wrr
    #  - ip_vs_sh
    #  - nf_conntrack_ipv4

    - name: Download the kube-flannel.yml file
      get_url:
        url: https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
        dest: /root
      when: "'master' in inventory_hostname"

    - name: Initialize the cluster
      shell: >
        kubeadm init --apiserver-advertise-address=192.168.99.110 --pod-network-cidr 10.244.0.0/16
      when: "'master' in inventory_hostname"

    - name: Allow a non-root user to access the cluster (1)
      file:
        path: "/home/vagrant/.kube"
        state: directory
      become_user: vagrant

    - name: Allow a non-root user to access the cluster (2)
      copy:
        mode: preserve
        src: "/etc/kubernetes/admin.conf"
        dest: "/home/vagrant/.kube/config"
        remote_src: yes
        owner: vagrant
        group: vagrant
      #become: yes
      #become_user: vagrant
      when: "'master' in inventory_hostname"

    - name: Allow a non-root user to access the cluster (3)
      copy:
        mode: preserve
        src: "/root/kube-flannel.yml"
        dest: "/home/vagrant"
        remote_src: yes
      #become: yes
      #become_user: vagrant
      when: "'master' in inventory_hostname"

    - name: Apply the kube-flannel.yml configuration to the cluster
      shell: >
        kubectl apply -f kube-flannel.yml
      become_user: vagrant
      when: "'master' in inventory_hostname"

    - name: Allow the master node to run other pods
      shell: >
        kubectl taint nodes --all node-role.kubernetes.io/master-
      become_user: vagrant
      when: "'master' in inventory_hostname"

    - name: Enable bach completion
      shell: >
        echo "source <(kubectl completion bash)" >> /home/vagrant/.bashrc
      become_user: vagrant

    - name: Get the token
      shell: >
        kubeadm token list |grep -v '^T' |awk '{print$1}' |head -n1 | tee /vagrant/token.txt
      when: "'master' in inventory_hostname"

    - name: Get the hex
      shell: >
        openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt |openssl rsa -pubin -outform der \
        2>/dev/null |openssl dgst -sha256 -hex |sed 's/^.* //' | tee /vagrant/sha256.txt
      become: yes
      become_user: vagrant
      when: "'master' in inventory_hostname"

    - name: Register the token in node
      shell: >
        cat /vagrant/token.txt
      register: token
      when: "'node' in inventory_hostname"

    - name: Register the sha256 in node
      shell: >
        cat /vagrant/sha256.txt
      register: sha256
      when: "'node' in inventory_hostname"

    - name: Join the cluster
      shell: >
        kubeadm join --token {{ token.stdout_lines.0 }} 192.168.99.110:6443 \
        --discovery-token-ca-cert-hash sha256:{{ sha256.stdout_lines.0 }}
      when: "'node' in inventory_hostname"

    - name: Restart kubelet
      service:
        name: kubelet
        state: restarted
